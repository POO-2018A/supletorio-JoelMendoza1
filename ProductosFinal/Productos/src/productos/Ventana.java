/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package productos;

import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ESFOT
 */
public class Ventana extends javax.swing.JFrame {
public static ArrayList<Object> computador = new ArrayList<>();
 DefaultComboBoxModel computadorModel = 
            new DefaultComboBoxModel(computador.toArray());
public static ArrayList<Object> componentes = new ArrayList<>();
 DefaultComboBoxModel componentesModel = 
            new DefaultComboBoxModel(componentes.toArray());
public static ArrayList<Object> accesorios = new ArrayList<>();
 DefaultComboBoxModel accesoriosModel = 
            new DefaultComboBoxModel(accesorios.toArray());
Computador prodComp;
Accesorio prodAcc;
Componente prodCom;
ClsControlador controller = new ClsControlador();
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        
        computador = controller.extraerObjetos("computador.dat");
        componentes = controller.extraerObjetos("componentes.dat");
        accesorios = controller.extraerObjetos("accesorios.dat");
        llenarTabla1();  
        llenarTabla2();  
        llenarTabla3();
        lblTipo.setVisible(false);
        txtTipo.setVisible(false);
        lblCapacidadColor.setVisible(false);          
        txtCapacidadColor.setVisible(false);          
        lblRAMVelocidad.setVisible(false);
        txtRAMVelocidad.setVisible(false);
        lblProcesador.setVisible(false);
        txtProcesador.setVisible(false);
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbProductos = new javax.swing.JComboBox<>();
        txtNombre = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        lblPrecio = new javax.swing.JLabel();
        lblMarca = new javax.swing.JLabel();
        txtTipo = new javax.swing.JTextField();
        txtCapacidadColor = new javax.swing.JTextField();
        txtRAMVelocidad = new javax.swing.JTextField();
        txtProcesador = new javax.swing.JTextField();
        lblTipo = new javax.swing.JLabel();
        lblCapacidadColor = new javax.swing.JLabel();
        lblRAMVelocidad = new javax.swing.JLabel();
        lblProcesador = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblComputador = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAccesorios = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblComponente = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmbProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computador", "Accesorios", "Componentes" }));
        cmbProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProductosActionPerformed(evt);
            }
        });

        lblNombre.setText("Nombre:");

        lblPrecio.setText("Precio:");

        lblMarca.setText("Marca:");

        lblTipo.setText("Tipo:");

        jButton1.setText("Registrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tblComputador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Precio", "Marca", "Tipo ", "Capacidad", "RAM", "Procesador"
            }
        ));
        jScrollPane1.setViewportView(tblComputador);

        tblAccesorios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Precio", "Marca", "Tipo", "Color"
            }
        ));
        jScrollPane2.setViewportView(tblAccesorios);

        tblComponente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Precio", "Marca", "Tipo", "Capacidad", "Velocidad"
            }
        ));
        jScrollPane3.setViewportView(tblComponente);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombre)
                            .addComponent(lblPrecio)
                            .addComponent(lblMarca)
                            .addComponent(lblTipo))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtTipo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMarca))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCapacidadColor, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                            .addComponent(lblRAMVelocidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblProcesador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtProcesador, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRAMVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCapacidadColor, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 190, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(94, 94, 94))))
            .addGroup(layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmbProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblNombre)
                                .addComponent(txtCapacidadColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblCapacidadColor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtRAMVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblRAMVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblPrecio))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtMarca, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMarca)
                            .addComponent(lblProcesador, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTipo))
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(txtProcesador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(87, 87, 87)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(158, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void llenarTabla1(){
        if(computador.size() > 0){
          Computador prod1 = new Computador();
          
      
            DefaultTableModel model = (DefaultTableModel) tblComputador.getModel();
            for(int i = 0; i < computador.size(); i ++){
                 prod1= (Computador) computador.get(i);
                 
                 Object productosN1 [] = {prod1.getNombre(),prod1.getPrecio(),prod1.getMarca(),prod1.getTipo() , prod1.getCapacidad(), prod1.getRam(),prod1.getProcesador()};
                
                 model.insertRow(i, productosN1);
                
            }
        }
    }

public void llenarTabla2(){
        if(componentes.size() > 0){
          
          Componente prod2 = new Componente();
        
            DefaultTableModel model = (DefaultTableModel) tblComponente.getModel();
            for(int i = 0; i < componentes.size(); i ++){
                 
                 prod2= (Componente) componentes.get(i);
                 
                 
                Object productosN2 [] = {prod2.getNombre(),prod2.getPrecio(),prod2.getMarca(),prod2.getTipo(), prod2.getCapacidad(),prod2.getVelocidad()};
                 
                
                 model.insertRow(i, productosN2);
                 
            }
        }
    }
public void llenarTabla3(){
        if(accesorios.size() > 0){
          
          Accesorio prod3 = new Accesorio();
            DefaultTableModel model = (DefaultTableModel) tblAccesorios.getModel();
            for(int i = 0; i < accesorios.size(); i ++){
                 
                 prod3= (Accesorio) accesorios.get(i);
                
                 Object productosN3 [] = {prod3.getNombre(),prod3.getPrecio(),prod3.getMarca(),prod3.getTipo() , prod3.getColor()}; 
                
                 model.insertRow(i, productosN3);
            }
        }
    }
    private void cmbProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProductosActionPerformed
        // TODO add your handling code here:
        String comboSel=cmbProductos.getSelectedItem().toString();
        lblTipo.setVisible(true);
        txtTipo.setVisible(true);
        if(comboSel.equals("Computador")){
            lblCapacidadColor.setVisible(true);
            lblCapacidadColor.setText("Capacidad \nAlmacenamiento");
            lblRAMVelocidad.setVisible(true);
            lblRAMVelocidad.setText("RAM:");
            lblProcesador.setVisible(true);
            lblProcesador.setText("Procesador:");
            txtCapacidadColor.setVisible(true);
            txtRAMVelocidad.setVisible(true);
            txtProcesador.setVisible(true);
        }else if(comboSel.equals("Accesorios")){
            lblCapacidadColor.setVisible(true);
            lblCapacidadColor.setText("Color:");
            lblRAMVelocidad.setVisible(false);           
            lblProcesador.setVisible(false);
            txtCapacidadColor.setVisible(true);
            txtRAMVelocidad.setVisible(false);
            txtProcesador.setVisible(false);
            
        }else if(comboSel.equals("Componentes")){
            lblCapacidadColor.setVisible(true);
            lblCapacidadColor.setText("Capacidad:");
            lblRAMVelocidad.setVisible(true);
            lblRAMVelocidad.setText("Velocidad:");
            lblProcesador.setVisible(false);
            txtCapacidadColor.setVisible(true);
            txtRAMVelocidad.setVisible(true);
            txtProcesador.setVisible(false);
            
        }
    }//GEN-LAST:event_cmbProductosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         
      String prodSel=cmbProductos.getSelectedItem().toString(); 
      String nombre= txtNombre.getText();
      double precio=Double.valueOf(txtPrecio.getText());System.out.println("hola");
      String marca= txtMarca.getText();
    
      if(prodSel.equals("Computador")){
      String tipo=txtTipo.getText();
      int capacidad=Integer.valueOf( txtCapacidadColor.getText());
      int RAM= Integer.valueOf(txtRAMVelocidad.getText());
      String procesador=txtProcesador.getText();
        prodComp=new Computador(nombre,precio,marca,tipo,capacidad,RAM,procesador);
        
        computador.add(prodComp);
        controller.escribirObjeto("computador.dat", computador);
        computador = controller.extraerObjetos("computador.dat");
        
        Object productosN [] = {prodComp.getNombre(),prodComp.getPrecio(),prodComp.getMarca(),prodComp.getTipo() , prodComp.getCapacidad(), prodComp.getRam(),prodComp.getProcesador()};
        DefaultTableModel model = (DefaultTableModel) tblComputador.getModel();
        model.addRow(productosN);
      computadorModel.addElement(prodComp);
      }else if(prodSel.equals("Accesorios")){
          
       String tipo= txtTipo.getText();
       String color= txtCapacidadColor.getText();
       prodAcc=new Accesorio (nombre,precio,marca,tipo,color);
       
       accesorios.add(prodAcc);
        controller.escribirObjeto("accesorios.dat",accesorios);
        accesorios = controller.extraerObjetos("accesorios.dat");
        
        Object productosN [] = {prodAcc.getNombre(),prodAcc.getPrecio(),prodAcc.getMarca(),prodAcc.getTipo() ,prodAcc.getColor()};
        DefaultTableModel model = (DefaultTableModel) tblAccesorios.getModel();
        model.addRow(productosN);
        accesoriosModel.addElement(prodAcc);
       
      }else if(prodSel.equals("Componentes")){
      String tipo=txtTipo.getText();
      String capacidad=txtCapacidadColor.getText();
      String velocidad=txtRAMVelocidad.getText();
      prodCom=new Componente(nombre,precio,marca,tipo,capacidad, velocidad);
      
      componentes.add(prodCom);
        controller.escribirObjeto("componentes.dat", componentes);
        componentes = controller.extraerObjetos("componentes.dat");
        
        Object productosN [] = {prodCom.getNombre(),prodCom.getPrecio(),prodCom.getMarca(),prodCom.getTipo() , prodCom.getCapacidad(),prodCom.getVelocidad()};
        DefaultTableModel model = (DefaultTableModel) tblComponente.getModel();
        model.addRow(productosN);
      componentesModel.addElement(prodCom);
      }
        
         

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbProductos;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCapacidadColor;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblProcesador;
    private javax.swing.JLabel lblRAMVelocidad;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JTable tblAccesorios;
    private javax.swing.JTable tblComponente;
    private javax.swing.JTable tblComputador;
    private javax.swing.JTextField txtCapacidadColor;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtProcesador;
    private javax.swing.JTextField txtRAMVelocidad;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables
}
